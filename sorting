package sorting;

import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String sortingType = "natural", dataType = "word";
        List entries;

        for (int i = 0; i < args.length ; i++) {
            if  (args[i].equals("-sortingType")){
                sortingType = args[i+1];
            }
            if (args[i].equals("-dataType")){
                dataType = args[i+1];
            }
        }
        if (dataType.equals("word") || dataType.equals("line")){
            entries = new ArrayList<String>();
            while (scanner.hasNextLine() && dataType.equals("line")){
                entries.add(scanner.nextLine());
            }
            while (scanner.hasNext() && dataType.equals("word")){
                entries.add(scanner.next());
            }
        } else {
            entries = new ArrayList<Long>();
            while (scanner.hasNextLong()){
                entries.add(scanner.nextLong());
            }
        }

        switch (sortingType){
            case "natural":
                sortNatural(dataType, entries);
                break;
            case "byCount":
                sortByCount(dataType, entries);
                break;
        }
    }

    private static void sortByCount(String dataType, List entries) {
        if (dataType.equals("long")){
            System.out.println("Total numbers: " + entries.size());
        } else  if (dataType.equals("line")){
            System.out.println("Total lines: " + entries.size());
        } else {
            System.out.println("Total lines: " + entries.size());
        }
        Map<Object, Integer> countMap = new TreeMap<>();
        for (Object o : entries) {
            if (countMap.containsKey(o)){
                countMap.put(o, countMap.get(o)+1);
            } else {
                countMap.put(o,1);
            }
        }
        List<Integer> countList = new ArrayList<>(new HashSet<>(countMap.values()));
        Collections.sort(countList);
        for (Integer i : countList) {
            for (Object key : countMap.keySet()) {
                if (countMap.get(key).equals(i)){
                    System.out.println(key + ":" + i + " time(s), " + i/entries.size());
                }
            }
        }
    }

    private static void sortNatural(String dataType, List entries) {
        Collections.sort(entries);
        if (dataType.equals("long")){
            System.out.println("Total numbers: " + entries.size());
        } else  if (dataType.equals("line")){
            System.out.println("Total lines: " + entries.size());
        } else {
            System.out.println("Total lines: " + entries.size());
        }
        if (dataType.equals("line")){
            System.out.println("Sorted data:");
            for (Object line : entries) {
                System.out.println(line);
            }
        } else {
            System.out.print("Sorted data: ");
            for (Object ob : entries) {
                System.out.print(ob + " ");
            }
        }
    }
}
